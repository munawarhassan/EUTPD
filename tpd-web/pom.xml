<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.pmi.tpd</groupId>
    <artifactId>tpd.parent</artifactId>
    <version>3.4.0</version>
  </parent>

  <artifactId>tpd.web</artifactId>
  <packaging>war</packaging>

  <name>${project.groupId}:${project.artifactId}</name>
  <description>European Commission Common Entry Gate Webapp Module.</description>

  <properties>
    <!-- properties for deployment -->
    <server.port>${app.http.port}</server.port>
    <server.profiles>production</server.profiles>
    <home.path />

    <oltu.version>1.0.0</oltu.version>
    <springframework.security.oauth2.version>2.0.5.RELEASE</springframework.security.oauth2.version>
    <metrics-spark-reporter.version>1.2</metrics-spark-reporter.version>
  </properties>

  <dependencies>

    <!-- Servlet 3.1 -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.ws.rs</groupId>
      <artifactId>jakarta.ws.rs-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.pmi.tpd</groupId>
      <artifactId>tpd.core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.pmi.tpd</groupId>
      <artifactId>tpd.frontend</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>javax.mail-api</artifactId>
      <version>${javax.mail.version}</version>
      <scope>compile</scope>
      <!-- <optional>true</optional> -->
      <exclusions>
        <exclusion>
          <groupId>javax.activation</groupId>
          <artifactId>activation</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
      <version>${javax.mail.version}</version>
      <exclusions>
        <exclusion>
          <groupId>javax.activation</groupId>
          <artifactId>activation</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.tuckey</groupId>
      <artifactId>urlrewritefilter</artifactId>
      <version>4.0.4</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- ================================================================================ -->
    <!-- Metrics dependencies -->
    <!-- ================================================================================ -->
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-graphite</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-healthchecks</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-json</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-jvm</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-jersey2</artifactId>
      <version>${metrics.version}</version>
      <exclusions>
        <exclusion>
          <groupId>javax.annotation</groupId>
          <artifactId>javax.annotation-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.hk2.external</groupId>
          <artifactId>jakarta.inject</artifactId>
        </exclusion>
        <exclusion>
          <groupId>jakarta.annotation</groupId>
          <artifactId>jakarta.annotation-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-logback</artifactId>
      <version>${metrics.version}</version>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-servlets</artifactId>
    </dependency>
    <dependency>
      <groupId>fr.ippon.spark.metrics</groupId>
      <artifactId>metrics-spark-reporter</artifactId>
      <version>${metrics-spark-reporter.version}</version>
    </dependency>
    <dependency>
      <groupId>com.ryantenney.metrics</groupId>
      <artifactId>metrics-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-jcache</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-jmx</artifactId>
    </dependency>

    <!-- ================================================================================ -->
    <!-- Jwt dependencies -->
    <!-- ================================================================================ -->

    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-api</artifactId>
      <version>0.11.1</version>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-impl</artifactId>
      <version>0.11.1</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-jackson</artifactId>
      <!-- or jjwt-gson if Gson is preferred -->
      <version>0.11.1</version>
      <scope>runtime</scope>
    </dependency>

    <!-- ================================================================================ -->
    <!-- Oauth2 dependencies -->
    <!-- ================================================================================ -->
    <!-- <dependency> -->
    <!-- <groupId>org.apache.oltu.oauth2</groupId> -->
    <!-- <artifactId>org.apache.oltu.oauth2.common</artifactId> -->
    <!-- <version>${oltu.version}</version> -->
    <!-- </dependency> -->
    <!-- <dependency> -->
    <!-- <groupId>org.apache.oltu.oauth2</groupId> -->
    <!-- <artifactId>org.apache.oltu.oauth2.authzserver</artifactId> -->
    <!-- <version>${oltu.version}</version> -->
    <!-- </dependency> -->
    <!-- <dependency> -->
    <!-- <groupId>org.apache.oltu.oauth2</groupId> -->
    <!-- <artifactId>org.apache.oltu.oauth2.resourceserver</artifactId> -->
    <!-- <version>${oltu.version}</version> -->
    <!-- </dependency> -->
    <!-- <dependency> -->
    <!-- <groupId>org.apache.oltu.oauth2</groupId> -->
    <!-- <artifactId>org.apache.oltu.oauth2.dynamicreg.client</artifactId> -->
    <!-- <version>${oltu.version}</version> -->
    <!-- </dependency> -->

    <!-- <dependency> -->
    <!-- <groupId>org.apache.oltu.oauth2</groupId> -->
    <!-- <artifactId>org.apache.oltu.oauth2.dynamicreg.server</artifactId> -->
    <!-- <version>${oltu.version}</version> -->
    <!-- </dependency> -->

    <!-- ================================================================================ -->
    <!-- Jersey dependencies -->
    <!-- ================================================================================ -->
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet-core</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.glassfish.hk2.external</groupId>
          <artifactId>javax.inject</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.annotation</groupId>
          <artifactId>javax.annotation-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.hk2.external</groupId>
          <artifactId>jakarta.inject</artifactId>
        </exclusion>
        <exclusion>
          <groupId>jakarta.annotation</groupId>
          <artifactId>jakarta.annotation-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!--    <dependency>-->
    <!--      <groupId>org.glassfish.jersey.containers</groupId>-->
    <!--      <artifactId>jersey-container-servlet</artifactId>-->
    <!--    </dependency>-->
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <exclusions>
        <exclusion>
          <groupId>jakarta.activation</groupId>
          <artifactId>jakarta.activation-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>


    <!-- <dependency> -->
    <!-- <groupId>org.glassfish.jersey.media</groupId> -->
    <!-- <artifactId>jersey-media-jaxb</artifactId> -->
    <!-- </dependency> -->

    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.ext</groupId>
      <artifactId>jersey-spring5</artifactId>
      <exclusions>
        <exclusion>
          <groupId>javax.inject</groupId>
          <artifactId>javax.inject</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.hk2.external</groupId>
          <artifactId>jakarta.inject</artifactId>
        </exclusion>
        <exclusion>
          <groupId>jakarta.annotation</groupId>
          <artifactId>jakarta.annotation-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.ext</groupId>
      <artifactId>jersey-mvc-bean-validation</artifactId>
      <exclusions>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>javax.inject</artifactId>
          <groupId>org.glassfish.hk2.external</groupId>
        </exclusion>
        <exclusion>
          <groupId>org.glassfish.hk2.external</groupId>
          <artifactId>jakarta.inject</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- ================================================================================ -->
    <!-- Swagger dependencies -->
    <!-- ================================================================================ -->
    <dependency>
      <groupId>io.swagger.core.v3</groupId>
      <artifactId>swagger-jaxrs2</artifactId>
      <version>${swagger.version}</version>
    </dependency>

    <!-- ================================================================================ -->
    <!-- Log dependencies -->
    <!-- ================================================================================ -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>

    <!-- ================================================================================ -->
    <!-- Thymleaf -->
    <!-- ================================================================================ -->
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf-spring4</artifactId>
      <version>${thymleaf.version}</version>
    </dependency>
    <dependency>
      <groupId>nz.net.ultraq.thymeleaf</groupId>
      <artifactId>thymeleaf-layout-dialect</artifactId>
      <version>${thymleaf-layout.version}</version>
    </dependency>

    <!-- ================================================================================ -->
    <!-- Springframework Dependencies -->
    <!-- ================================================================================ -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-websocket</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-messaging</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-messaging</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.hateoas</groupId>
      <artifactId>spring-hateoas</artifactId>
    </dependency>
    <!-- for OAuth 2.0 -->
    <!-- <dependency> -->
    <!-- <groupId>org.springframework.security.oauth</groupId> -->
    <!-- <artifactId>spring-security-oauth2</artifactId> -->
    <!-- <version>${springframework.security.oauth2.version}</version> -->
    <!-- </dependency> -->

    <!--
    https://mvnrepository.com/artifact/se.jiderhamn.classloader-leak-prevention/classloader-leak-prevention-servlet3 -->
    <dependency>
      <groupId>se.jiderhamn.classloader-leak-prevention</groupId>
      <artifactId>classloader-leak-prevention-servlet3</artifactId>
      <version>2.7.0</version>
    </dependency>

    <!-- ================================================================================ -->
    <!-- Test Dependencies -->
    <!-- ================================================================================ -->
    <dependency>
      <groupId>com.pmi.tpd</groupId>
      <artifactId>tpd.testing.junit5</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.springtestdbunit</groupId>
      <artifactId>spring-test-dbunit</artifactId>
      <version>1.0.0</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <finalName>${application.name}</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
        <excludes>
          <exclude>**/*.jks</exclude>
        </excludes>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.jks</include>
        </includes>
        <filtering>false</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
        <filtering>true</filtering>
      </testResource>
      <testResource>
        <directory>src/it/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
        <excludes>
          <exclude>**/webdrivers/*</exclude>
        </excludes>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <configuration>
          <container>
            <containerId>tomcat8x</containerId>
            <type>remote</type>
            <systemProperties>
              <cargo.jvmargs>-Xmx256m</cargo.jvmargs>
            </systemProperties>
          </container>
          <configuration>
            <type>runtime</type>
            <properties>
              <cargo.hostname>${cargo.hostname}</cargo.hostname>
              <cargo.protocol>${cargo.protocol}</cargo.protocol>
              <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>
              <cargo.remote.username>${cargo.remote.username}</cargo.remote.username>
              <cargo.remote.password>${cargo.remote.password}</cargo.remote.password>
              <cargo.tomcat.ajp.port>${cargo.tomcat.ajp.port}</cargo.tomcat.ajp.port>
            </properties>
          </configuration>
          <deployables>
            <deployable>
              <groupId>${project.groupId}</groupId>
              <artifactId>${project.artifactId}</artifactId>
              <type>war</type>
              <properties>
                <context>/tpd</context>
              </properties>
            </deployable>
          </deployables>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- ================================================================================ -->
    <!-- Development profile: activate with -Pdevelopment or -Denv=dev -->
    <!-- this profile is used only for local development: -->
    <!-- - use Spring development profile, ie (all external services are 
      mocked) -->
    <!-- - deployment is local -->
    <!-- ================================================================================ -->
    <profile>
      <id>development</id>
      <activation>
        <property>
          <name>env</name>
          <value>dev</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <configuration combine.self="override">
              <container>
                <containerId>tomcat9x</containerId>
                <artifactInstaller>
                  <groupId>org.apache.tomcat</groupId>
                  <artifactId>tomcat</artifactId>
                  <version>${tomcat.version}</version>
                </artifactInstaller>
                <systemProperties>
                  <cargo.jvmargs>-Xmx256m ${jdk.jdkoptions}</cargo.jvmargs>
                  <TPD_HOME>${home.path}</TPD_HOME>
                  <TPD_PROFILES>development</TPD_PROFILES>
                </systemProperties>
              </container>
              <configuration>
                <type>standalone</type>
                <home>
                  ${project.build.directory}/apache-tomcat-${tomcat.version}
                </home>
                <properties>
                  <cargo.servlet.port>8080</cargo.servlet.port>
                </properties>
              </configuration>
              <deployables>
                <deployable>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>${project.artifactId}</artifactId>
                  <type>war</type>
                  <properties>
                    <context>ROOT</context>
                  </properties>
                </deployable>
              </deployables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>cargo-local-linux</id>
      <activation>
        <os>
          <family>unix</family>
        </os>
      </activation>
      <properties>
        <home.path>${HOME}/development/data/tpd-home</home.path>
      </properties>
    </profile>
    <profile>
      <id>cargo-local-windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <home.path>c:/development/data/tpd-home</home.path>
      </properties>
    </profile>
    <profile>
      <id>cargo-local-mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <home.path>${HOME}/Development/data/tpd-home</home.path>
      </properties>
    </profile>
    <!-- ================================================================================ -->
    <!-- Integration profile: activate with -Pintegration or -Denv=int -->
    <!-- this profile is used only for deployment on integration environment: -->
    <!-- - use Spring integration profile -->
    <!-- - deployment is on integration server -->
    <!-- ================================================================================ -->
    <profile>
      <id>integration</id>
      <activation>
        <property>
          <name>env</name>
          <value>int</value>
        </property>
      </activation>
      <properties>
        <server.port>7180</server.port>
        <server.profiles>integration</server.profiles>

        <cargo.hostname>pmichlauapp220.pmintl.net</cargo.hostname>
        <cargo.protocol>http</cargo.protocol>
        <cargo.servlet.port>${server.port}</cargo.servlet.port>
        <cargo.remote.username>tomcat</cargo.remote.username>
        <cargo.remote.password>tomcat</cargo.remote.password>
        <cargo.tomcat.ajp.port>7109</cargo.tomcat.ajp.port>
      </properties>
    </profile>

    <!-- ================================================================================ -->
    <!-- QA profile: activate with -Pqa or -Denv=qa -->
    <!-- this profile is used only for deployment on qa environment: -->
    <!-- - use Spring integration profile -->
    <!-- ================================================================================ -->
    <profile>
      <id>qa</id>
      <activation>
        <property>
          <name>env</name>
          <value>qa</value>
        </property>
      </activation>
      <properties>
        <server.port>7170</server.port>
        <server.profiles>qa</server.profiles>

        <cargo.hostname>pmichlauapp220.pmintl.net</cargo.hostname>
        <cargo.protocol>http</cargo.protocol>
        <cargo.servlet.port>${server.port}</cargo.servlet.port>
        <cargo.remote.username>tomcat</cargo.remote.username>
        <cargo.remote.password>tomcat</cargo.remote.password>
        <cargo.tomcat.ajp.port>7179</cargo.tomcat.ajp.port>
      </properties>
    </profile>

    <!-- ================================================================================ -->
    <!-- Staging profile: activate with -Pstaging or -Denv=stg -->
    <!-- this profile is used only for deployment on staging environment: -->
    <!-- - use Spring integration profile -->
    <!-- ================================================================================ -->
    <profile>
      <id>staging</id>
      <activation>
        <property>
          <name>env</name>
          <value>stg</value>
        </property>
      </activation>
      <properties>
        <cargo.hostname>pmichlauapp220.pmintl.net</cargo.hostname>
        <cargo.protocol>http</cargo.protocol>
        <cargo.servlet.port>7160</cargo.servlet.port>
        <cargo.remote.username>tomcat</cargo.remote.username>
        <cargo.remote.password>tomcat</cargo.remote.password>
        <cargo.tomcat.ajp.port>7169</cargo.tomcat.ajp.port>
      </properties>
    </profile>

    <profile>
      <id>docker</id>
      <activation>
        <property>
          <name>env</name>
          <value>docker</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>build</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <images>
                    <image>
                      <alias>backend</alias>
                      <name>tpd/backend</name>
                      <build>
                        <tags>
                          <tag>latest</tag>
                          <tag>${project.version}</tag>
                        </tags>
                        <dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>
                        <assembly>
                          <descriptorRef>rootWar</descriptorRef>
                        </assembly>
                      </build>
                      <run>
                        <ports>
                          <port>${server.port}:8080</port>
                        </ports>
                        <wait>
                          <healthy>true</healthy>
                          <time>120000</time>
                        </wait>
                      </run>
                    </image>
                  </images>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
